[{"F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\index.tsx":"1","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\App.tsx":"2","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\components\\Header.tsx":"3","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\components\\Todo.tsx":"4","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\components\\TodoList.tsx":"5","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\components\\Sorter.tsx":"6","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\hooks\\usePositionReorder.ts":"7","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\hooks\\useMeasurePosition.ts":"8","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\util\\findIndex.ts":"9"},{"size":149,"mtime":1606651148973,"results":"10","hashOfConfig":"11"},{"size":2367,"mtime":1626436434758,"results":"12","hashOfConfig":"11"},{"size":4232,"mtime":1626436189358,"results":"13","hashOfConfig":"11"},{"size":3648,"mtime":1626436322429,"results":"14","hashOfConfig":"11"},{"size":2232,"mtime":1626436357976,"results":"15","hashOfConfig":"11"},{"size":1290,"mtime":1626244183315,"results":"16","hashOfConfig":"11"},{"size":1504,"mtime":1608211035227,"results":"17","hashOfConfig":"11"},{"size":658,"mtime":1608211048474,"results":"18","hashOfConfig":"11"},{"size":0,"mtime":1626000682429,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1oznv67",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\index.tsx",[],["42","43"],"F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\App.tsx",[],"F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\components\\Header.tsx",[],"F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\components\\Todo.tsx",["44","45"],"F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\components\\TodoList.tsx",["46","47","48","49"],"// @ts-nocheck\r\nimport React, { useRef } from \"react\";\r\nimport move from \"array-move\";\r\n\r\nimport { Todo as TodoI } from \"../App\";\r\nimport Sorter from \"./Sorter\";\r\nimport { Position, findIndex } from \"../util/findIndex\";\r\nimport Todo from \"./Todo\";\r\n\r\ninterface IProps {\r\n    todos: Array<TodoI>;\r\n    setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\r\n    realList: Todoi[];\r\n    setCurrent: React.Dispatch<React.SetStateAction<string>>;\r\n    current: string;\r\n    filteredTodos: Todo[];\r\n}\r\n\r\nconst TodoList: React.FC<IProps> = ({\r\n    setTodos,\r\n    todos,\r\n    realList,\r\n    filteredTodos,\r\n    current,\r\n    setCurrent,\r\n}) => {\r\n    const handleClear = () => {\r\n        setTodos(realList.filter((item) => item.isCompleted === false));\r\n        localStorage.setItem(\"todos\", JSON.stringify(null));\r\n    };\r\n\r\n    return (\r\n        <ul className=\"grid justify-items-center transform -translate-y-12 relative  lg:w-30 lg:-translate-x-1/2 lg:relative lg:left-1/2 \">\r\n            {todos.map((todo, i) => (\r\n                <Todo\r\n                    i={i}\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    setTodos={setTodos}\r\n                    todos={todos}\r\n                />\r\n            ))}\r\n            <li className=\"text-gray-400 flex justify-between items-center bg-white text-sm p-4 last:rounded-bl-md last:rounded-br-md shadow-md w-90 dark:bg-veryDarkDesaBlueDT dark:text-lightGrayBlueDT lg:w-full\">\r\n                <span className=\"lg:text-xs lg:block lg:whitespace-nowrap\">\r\n                    {todos.length} items left\r\n                </span>\r\n\r\n                <Sorter\r\n                    current={current}\r\n                    setCurrent={setCurrent}\r\n                    setTodos={setTodos}\r\n                    filteredTodos={filteredTodos}\r\n                    extraStyle=\"p-2 hidden lg:flex lg:w-full lg:text-xs shadow-none space-between\"\r\n                />\r\n\r\n                <button\r\n                    className=\"lg:text-xs lg:flex lg:whitespace-nowrap\"\r\n                    onClick={handleClear}\r\n                >\r\n                    Clear Completed\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\components\\Sorter.tsx",["50","51"],"import React, { useState, useEffect } from \"react\";\r\nimport { Todo } from \"../App\";\r\ninterface IProps {\r\n    setCurrent: React.Dispatch<React.SetStateAction<string>>;\r\n    current: string;\r\n    setTodos: any;\r\n    filteredTodos: Todo[];\r\n    extraStyle?: string;\r\n}\r\n\r\nconst Sorter: React.FC<IProps> = ({ setCurrent, current, extraStyle }) => {\r\n    return (\r\n        <div\r\n            className={`flex justify-around items-center w-90 bg-white shadow-md rounded-md mx-auto p-4  text-gray-500 text-center text-sm dark:bg-veryDarkDesaBlueDT dark:text-lightGrayBlueDT  lg:w-96 ${extraStyle}`}\r\n        >\r\n            <button\r\n                onClick={() => setCurrent(\"all\")}\r\n                className={`${current === \"all\" && \"text-blue-500\"}`}\r\n            >\r\n                All\r\n            </button>\r\n            <button\r\n                onClick={() => setCurrent(\"active\")}\r\n                className={`${current === \"active\" && \"text-blue-500\"}`}\r\n            >\r\n                Active\r\n            </button>\r\n            <button\r\n                onClick={() => setCurrent(\"completed\")}\r\n                className={`${current === \"completed\" && \"text-blue-500\"}`}\r\n            >\r\n                Completed\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sorter;\r\n","F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\hooks\\usePositionReorder.ts",[],["52","53"],"F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\hooks\\useMeasurePosition.ts",[],"F:\\Nico\\Web Development\\Websites\\ts-todo\\src\\util\\findIndex.ts",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":27,"nodeType":"60","messageId":"61","endLine":2,"endColumn":36},{"ruleId":"58","severity":1,"message":"62","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":16},{"ruleId":"58","severity":1,"message":"63","line":2,"column":17,"nodeType":"60","messageId":"61","endLine":2,"endColumn":23},{"ruleId":"58","severity":1,"message":"64","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":12},{"ruleId":"58","severity":1,"message":"65","line":7,"column":10,"nodeType":"60","messageId":"61","endLine":7,"endColumn":18},{"ruleId":"58","severity":1,"message":"66","line":7,"column":20,"nodeType":"60","messageId":"61","endLine":7,"endColumn":29},{"ruleId":"58","severity":1,"message":"67","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"54","replacedBy":"68"},{"ruleId":"56","replacedBy":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'motion' is defined but never used.","'useRef' is defined but never used.","'move' is defined but never used.","'Position' is defined but never used.","'findIndex' is defined but never used.","'useState' is defined but never used.",["70"],["71"],"no-global-assign","no-unsafe-negation"]